
// Analysis.h
//

//전략 -> 1. 1라운드의 키 12바이트를 알려줬으니 파형 정보가 담긴 1라운드 치환계층까지 12바이트값을 구할수 있다.
// 
//전략 2번째 주어진 라운드 키를 활용하여 5라운드의 키를 구해본다 W0^(W1>>>19)^W0^(W1>>>31) = 1라운드 키 ^ 5라운드 키
#ifndef _ANALYSIS_H_
#define _ANALYSIS_H_

/************************************************************************************/
/*                                    ARIA-128/128                                   */
/************************************************************************************/

/*----------------------------------------------------------------------------------*/
/*  평문 길이																		*/
/*  키 길이																			*/
/*  라운드 키 길이																	*/
/*  라운드 수																		*/
/*----------------------------------------------------------------------------------*/
#define	_BLOCK_SIZE_				16
#define	_KEY_SIZE_					16
#define	_ROUND_KEY_SIZE_			16
#define	_ROUND_						16

/*----------------------------------------------------------------------------------*/
/*  폴더 경로 ('\' 두 번 입력해야 함)												*/
/*  파형 이름																		*/
/*  평문 이름																		*/
/*----------------------------------------------------------------------------------*/
#define       _FOLD_				"C:\\Users\\hyun\\Desktop\\side\\4. ARIA-128"
#define _TRACE_FILE_				"ARIA"
#define _PLAIN_FILE_				"plain"
#define RK							0
/*----------------------------------------------------------------------------------*/
/*  분석할 파형 수																	*/
/*----------------------------------------------------------------------------------*/
#define _TRACE_NUM_					1000

/*----------------------------------------------------------------------------------*/
/*  분석 위치																		*/
/*----------------------------------------------------------------------------------*/
/*  Plaintext Load : 0, 1R Sbox : 1													*/
/*----------------------------------------------------------------------------------*/
#define _TARGET_					0

/*----------------------------------------------------------------------------------*/
/*  분석 바이트																		*/
/*----------------------------------------------------------------------------------*/
#define _BYTE_						1

/*----------------------------------------------------------------------------------*/
/*  분석 시작 포인트																*/
/*  분석 끝 포인트																	*/
/*----------------------------------------------------------------------------------*/
#define _START_POINT_				1
#define _END_POINT_					5800

/*----------------------------------------------------------------------------------*/
/*  분석 시작할 키																	*/
/*  분석할 키 수																	*/
/*----------------------------------------------------------------------------------*/
#define _GUESS_KEY_START_			0
#define _GUESS_KEY_NUM_				256 //65536

/*----------------------------------------------------------------------------------*/
/*  출력할 후보 키 수																*/
/*----------------------------------------------------------------------------------*/
#define _CANDIDATES_				10

/*----------------------------------------------------------------------------------*/
/*  각 후보 키에 대한 상관계수 분석 결과 출력 (미출력 : 0, 출력 : 1)				*/
/*----------------------------------------------------------------------------------*/
#define _CORRELATION_TRACE_			0

/*----------------------------------------------------------------------------------*/
/*  각 후보 키에 대한 상관계수의 최댓값 출력 (미출력 : 0, 출력 : 1)					*/
/*  Max Peak Trace 출력할 파형 단위 수												*/
/*----------------------------------------------------------------------------------*/
#define _MAX_PEAK_TRACE_			0
#if _MAX_PEAK_TRACE_
#define _TRACE_UNIT_				10
#endif

/************************************************************************************/

typedef struct TRACE_HEADER {
	unsigned char strID[20];
	unsigned int trace_no;
	unsigned int point_no;
	unsigned char strEND[4];
} trace_HEADER;

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <math.h>
#include <direct.h>

#define _FILE_NAME_SIZE_	1000
#define _PASS_				1
#define _FAIL_				0

int LOG(struct tm *TIME, __int64 START_TIME, __int64 END_TIME);
int POINT_VERIFY(unsigned int *POINTS, unsigned int *TRACE_NUM);
int First_Order_CPA(struct tm *TIME, unsigned int POINTS, unsigned int TRACE_NUM);

#endif 
